package swax.web.controller;
import javax.servlet.http.HttpServletRequest;import javax.validation.Valid;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.ui.ModelMap;import org.springframework.validation.BindingResult;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.servlet.ModelAndView;import swax.web.form.PojoModelLoginForm;import swax.web.form.PojoModelRegisterForm;import swax.webservice.entity.User;import swax.webservice.service.IUserService;
@Controllerpublic class LoginController {
	@Autowired	private IUserService userService = null;
	@RequestMapping(value="/")	public String loadSwax(Model model, PojoModelLoginForm loginForm) {		model.addAttribute("loginModelAttribute", loginForm);		return "login";	}
	@RequestMapping(value="/loginAction")	public String login(@Valid @ModelAttribute(value="loginModelAttribute" ) final PojoModelLoginForm loginForm,             final BindingResult pBindingResult, HttpServletRequest request, final ModelMap pModel) {		User userALogger;		try {			userALogger = this.userService.findByEmailAndPassword(loginForm.getEmail(),loginForm.getPassword());		} catch (Exception e) {			userALogger = null;			System.out.println(e.toString());		}				if (userALogger != null){			request.getSession().setAttribute("user", userALogger);	        pModel.addAttribute("user", userALogger);			return "mySwax";		}else {			String errorMsg = "Connection impossible";			request.getSession().setAttribute("user", null);			request.getSession().setAttribute("errorMsg", errorMsg);			pModel.addAttribute("loginModel", loginForm);			return "login";		}			}		@RequestMapping(value="/login")	public String loadLoginPage(Model model, PojoModelLoginForm loginForm) {		model.addAttribute("loginModelAttribute", loginForm);		return "login";	}		@RequestMapping(value="/logout", method = RequestMethod.GET)	public ModelAndView logout(HttpServletRequest request) {		request.getSession().setAttribute("user", null);		request.getSession().setAttribute("errorMsg", "");		ModelAndView mav = new ModelAndView("login");		mav.getModel().put("loginModelAttribute", new PojoModelLoginForm());		return mav;	}
	@RequestMapping(value="/register")	public String loadRegisterPage(Model model, PojoModelRegisterForm registerForm) {		model.addAttribute("registerModelAttribute", registerForm);		return "register";	}}