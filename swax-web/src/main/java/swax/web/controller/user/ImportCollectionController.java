package swax.web.controller.user;
import java.io.IOException;import java.text.ParseException;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.servlet.ModelAndView;import swax.web.form.PojoModelImportCollectionForm;import swax.web.form.PojoModelImportWantlistForm;import swax.webservice.entity.album.AlbumDiscogs;import swax.webservice.entity.user.User;import swax.webservice.service.album.IAlbumCollectedService;import swax.webservice.service.album.IAlbumDiscogsService;import swax.webservice.service.album.IAlbumService;import swax.webservice.service.user.IUserService;
@Controllerpublic class ImportCollectionController {
	@Autowired	private IUserService userService = null;		@Autowired	private IAlbumCollectedService albumCollectedService = null;		@Autowired	private IAlbumService albumService = null;		@Autowired	IAlbumDiscogsService albumDiscogsService = null;		@RequestMapping(value="/importDiscogsCollection")	public ModelAndView importDiscogsCollection(@ModelAttribute(value="importCollectionModelAttribute") 			final PojoModelImportCollectionForm importCollectionForm, HttpServletRequest request, 			final ModelAndView mav) throws IOException, ParseException {				User user = (User) request.getSession().getAttribute("user");						/** START Import with UPLOAD **/				MultipartFile file = importCollectionForm.getDiscogsFilePath();		List<AlbumDiscogs> albumsDiscogs = userService.getDiscogsCollectionUpload(file, request);				/** END Import with UPLOAD **/				albumsDiscogs = albumDiscogsService.trimAlbumsDiscogs(albumsDiscogs);		albumService.updateAlbumTable(albumsDiscogs);		albumCollectedService.createUserCollection(user, albumsDiscogs);				Map<String, Object> mapInitUser = userService.initUser(user);						mav.getModel().put("hasCollection", mapInitUser.get("hasCollection"));		mav.getModel().put("userCollection", mapInitUser.get("userCollection"));		mav.getModel().put("hasWantlist", mapInitUser.get("hasWantlist"));		mav.getModel().put("userWantlist", mapInitUser.get("userWantlist"));		mav.getModel().put("latestAdditions", mapInitUser.get("latestAdditions"));		if (!(boolean) mapInitUser.get("hasWantlist")) {			mav.getModel().put("importWantlistModelAttribute", new PojoModelImportWantlistForm());				}		mav.setViewName("user/mySwax");				return mav;	}
}