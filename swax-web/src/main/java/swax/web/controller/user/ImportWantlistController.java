package swax.web.controller.user;
import java.io.IOException;import java.text.ParseException;import java.util.List;import javax.servlet.http.HttpServletRequest;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.servlet.ModelAndView;import swax.web.form.PojoModelImportWantlistForm;import swax.webservice.dto.AlbumDTO;import swax.webservice.entity.AlbumDiscogsWantlist;import swax.webservice.entity.User;import swax.webservice.service.IAlbumDiscogsService;import swax.webservice.service.IAlbumDiscogsWantlistService;import swax.webservice.service.IAlbumService;import swax.webservice.service.IAlbumWantlistService;import swax.webservice.service.IUserService;
@Controllerpublic class ImportWantlistController {
	@Autowired	private IUserService userService = null;		@Autowired	private IAlbumWantlistService albumWantlistService = null;		@Autowired	private IAlbumService albumService = null;		@Autowired	IAlbumDiscogsService albumDiscogsService = null;		@Autowired	IAlbumDiscogsWantlistService albumDiscogsWantlistService = null;		@RequestMapping(value="/importDiscogsWantlist")	public ModelAndView importDiscogsWantlist(@ModelAttribute(value="importWantlistModelAttribute") 			final PojoModelImportWantlistForm importWantlistForm, HttpServletRequest request, 			final ModelAndView mav) throws IOException, ParseException {				boolean hasWantlist = true;		boolean hasCollection = true;		User user = (User) request.getSession().getAttribute("user");						/** START Import with UPLOAD **/				MultipartFile file = importWantlistForm.getDiscogsFilePath();		List<AlbumDiscogsWantlist> albumsDiscogsWantlist = userService.getDiscogsWantlistUpload(file, request);				/** END Import with UPLOAD **/				albumsDiscogsWantlist = albumDiscogsWantlistService.trimAlbumsDiscogsWantlist(albumsDiscogsWantlist);		albumService.updateAlbumTableWithWantlist(albumsDiscogsWantlist);		albumWantlistService.createUserWantlist(user, albumsDiscogsWantlist);		//		TODO Do init() method for User (get collection & wantlist)				List<AlbumDTO> albumsWantlistDTO = user.getAlbumsWantlistDTO();				System.out.println("ALBUMS = "+albumsWantlistDTO.size());				if (albumsWantlistDTO.size()==0) {			hasWantlist = false;		}				List<AlbumDTO> albumsDTO = user.getAlbumsDTO();				System.out.println("ALBUMS = "+albumsDTO.size());				if (albumsDTO.size()==0) {			hasCollection = false;		}				request.getSession().setAttribute("hasCollection", hasCollection);		mav.getModel().put("userCollection", albumsDTO);		request.getSession().setAttribute("hasWantlist", hasWantlist);		mav.getModel().put("userWantlist", albumsWantlistDTO);		mav.setViewName("mySwax");				return mav;	}
}