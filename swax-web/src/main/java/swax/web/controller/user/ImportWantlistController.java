package swax.web.controller.user;
import java.io.IOException;import java.text.ParseException;import java.util.List;import javax.servlet.http.HttpServletRequest;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.multipart.MultipartFile;import org.springframework.web.servlet.ModelAndView;import swax.web.form.PojoModelImportWantlistForm;import swax.web.mav.utils.MavUtil;import swax.webservice.entity.album.AlbumDiscogsWantlist;import swax.webservice.entity.user.User;import swax.webservice.service.album.IAlbumDiscogsService;import swax.webservice.service.album.IAlbumDiscogsWantlistService;import swax.webservice.service.album.IAlbumService;import swax.webservice.service.album.IAlbumWantlistService;import swax.webservice.service.user.IUserService;
@Controllerpublic class ImportWantlistController {
	@Autowired	private IUserService userService = null;		@Autowired	private IAlbumWantlistService albumWantlistService = null;		@Autowired	private IAlbumService albumService = null;		@Autowired	IAlbumDiscogsService albumDiscogsService = null;		@Autowired	IAlbumDiscogsWantlistService albumDiscogsWantlistService = null;		@Autowired	private MavUtil mavUtil = null;		@RequestMapping(value="/importDiscogsWantlist")	public ModelAndView importDiscogsWantlist(@ModelAttribute(value="importWantlistModelAttribute") 			final PojoModelImportWantlistForm importWantlistForm, HttpServletRequest request, 			ModelAndView mav) throws IOException, ParseException {				User user = (User) request.getSession().getAttribute("user");						/** START Import with UPLOAD **/				MultipartFile file = importWantlistForm.getWantlistFilePath();		List<AlbumDiscogsWantlist> albumsDiscogsWantlist = userService.getDiscogsWantlistUpload(file, request);				/** END Import with UPLOAD **/				albumsDiscogsWantlist = albumDiscogsWantlistService.trimAlbumsDiscogsWantlist(albumsDiscogsWantlist);		albumService.updateAlbumTableWithWantlist(albumsDiscogsWantlist);		albumWantlistService.createUserWantlist(user, albumsDiscogsWantlist);				return mav = mavUtil.mySwax(user, request);	}
}