package swax.web.controller;
import javax.servlet.http.HttpServletRequest;import javax.validation.Valid;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.validation.BindingResult;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.servlet.ModelAndView;import swax.web.form.PojoModelChangePasswordForm;import swax.web.form.PojoModelLoginForm;import swax.webservice.entity.User;import swax.webservice.service.IUserService;
@Controllerpublic class ChangePasswordController {
	@Autowired	private IUserService userService = null;
	@RequestMapping(value="/changePasswordAction", method = RequestMethod.POST)	public ModelAndView changePassword(@Valid 		@ModelAttribute(value="changePasswordModelAttribute" ) final PojoModelChangePasswordForm changePasswordForm,             final BindingResult pBindingResult, HttpServletRequest request, final ModelMap ModelMap) {				String errorMsg = "";		User user;		ModelAndView mav = new ModelAndView();		boolean exception = false;			try {			user = this.userService.findByEmail(changePasswordForm.getEmail());		} catch (Exception e) {			user = null;			exception = true;			errorMsg  ="No password can be sent for this email adress.";			changePasswordForm.setEmail("");			mav.setViewName("login/changePassword");		}				if (user != null) {			String password = userService.initUserPassword();			user.setPassword(password);			userService.createUpdateEntity(user);			errorMsg="A new password has been sent to the email adress.";			PojoModelLoginForm loginForm = new PojoModelLoginForm();			loginForm.setErrorMsg(errorMsg);			loginForm.setEmail(changePasswordForm.getEmail());			mav.getModel().put("loginModelAttribute", loginForm);			mav.setViewName("login/login");		} else if (exception == false) {			errorMsg = "This email adress is not registered in Swax.";			mav.setViewName("changePassword");		}				changePasswordForm.setErrorMsg(errorMsg);		mav.getModel().put("changePasswordModelAttribute", changePasswordForm);		return mav;	}
}