spring.main.banner-mode=off

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2

#Datasource EMBEDDED H2
#spring.datasource.url=jdbc:h2:file:C:/Users/dam83/Desktop/dev/git/Swax/swax-webservice/src/main/resources/swax-h2-db
spring.datasource.url=jdbc:h2:file:C:/Users/Matthieu/git/swax-webservice/src/main/resources/swax-h2-db
#spring.datasource.url=jdbc:h2:file:D:/uvjpmn/Mes Documents/git/Swax/swax-webservice/src/main/resources/swax-h2-db
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

#Datasource POSTGRES SWAX
#spring.datasource.url=jdbc:postgresql://swax.cbfnla7chnox.eu-west-3.rds.amazonaws.com:5432/swax
#spring.datasource.username=swaxUser
#spring.datasource.password=Ibarra-AZ
#spring.datasource.driver-class-name=org.postgresql.Driver

#IDENTITY
spring.application.name=swax

# MULTIPART (MultipartProperties)
spring.http.multipart.enabled=true
#spring.http.multipart.file-size-threshold=0 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
#spring.http.multipart.location= # Intermediate location of uploaded files.
spring.http.multipart.max-file-size=-1
spring.http.multipart.max-request-size=-1
#spring.http.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.properties.hibernate.show_sql=false

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=none

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#Log config
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.hibernate=ERROR

#Number of maximum users
number.max.users=50